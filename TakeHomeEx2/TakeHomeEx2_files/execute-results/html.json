{
  "hash": "06c581e7f6afc9cf8cc42ceda3ac61a0",
  "result": {
    "markdown": "---\ntitle: \"Take-Home Exercise 2\"\neditor: visual\n---\n\n\n## Overview\n\n## Getting Started\n\n### Packages Used\n\nThe R packages used for the analysis are as follows:\n\n-   sf - used for importing, managing, and processing geospatial data\n\n-   tidyverse - a collection of packages for data science tasks\n\n-   tmap - used for creating thematic maps, such as choropleth and bubble maps\n\n-   spdep - collection of functions to create spatial weights matrix objects from polygon 'contiguities'\n\n-   funModeling - used to analyze data when we need to reduce variable cardinality in predictive modeling\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap, spdep, funModeling)\n```\n:::\n\n\n### Datasets Used\n\n| Type       | Name                                                                                                                         | Format    | Description                         |\n|--------------|-----------------------------|--------------|--------------|\n| Aspatial   | [WPdx Global Data Repositories](https://data.waterpointdata.org/dataset/Water-Point-Data-Exchange-Plus-WPdx-/eqje-vguj/data) | Shapefile | Water Point Data                    |\n| Geospatial | [geoBoundaries](https://www.geoboundaries.org/)                                                                              | Shapefile | Political Administrative Boundaries |\n\n## Importing Data\n\nTwo datasets will be usedm namely, geo_export and nga.\n\n### Importing water point geospatial data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwp <- st_read(dsn = \"geodata\",\n              layer = \"geo_export\",\n              crs = 4326) %>%\n  filter(clean_coun == \"Nigeria\")\n```\n:::\n\n\nFrom the output message, we learn that:\n\n-   Geometry type is point\n\n-   293223 features, 72 fields\n\n-   Assigned CRS is WGS 84, the 'World Geodetic System 1984'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(wp, \"geodata/wp_nga.rds\")\n```\n:::\n\n\nThe extracted data table, wp, has been saved in rds data format as wp_nga.rds.\n\n### Importing Nigeria LGA boundary data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnga <- st_read(dsn = \"geodata\",\n               layer = \"NGA\",\n               crs = 4326)\n```\n:::\n\n\nFrom the output message, we learn that:\n\n-   Geometry type is multipolygon\n\n-   774 features, 5 fields\n\n-   Assigned CRS is WGS 84, the 'World Geodetic System 1984'\n\n## Data Wrangling\n\n### Recoding NA values into string\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwp_nga <- read_rds(\"geodata/wp_nga.rds\") %>%\n    mutate(status_cle = replace_na(status_cle, \"Unknown\"))\n```\n:::\n\n\nAll \"NA\" values in status_cle field has been recoded into \"Unknown\"\n\n### Exploratory Data Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq(data=wp_nga, \n     input = 'status_cle')\n```\n:::\n\n\nThe status of all water points in Nigeria are displayed above.\n\n## Extracting Water Point Data\n\n### Extracting functional water point\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq(data=wpt_functional, \n     input = 'status_cle')\n```\n:::\n\n\nThe status of all functional water points in Nigeria are extracted and displayed above.\n\n### Extracting non-functional water point\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq(data=wpt_nonfunctional, \n     input = 'status_cle')\n```\n:::\n\n\nThe status of all non-functional water points in Nigeria are extracted and displayed above.\n\n### Extracting water point with Unknown class\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwpt_unknown <- wp_nga %>%\n  filter(status_cle == \"Unknown\")\n```\n:::\n\n\nThe status of all water points with unknown status in Nigeria are extracted.\n\n## Performing Point-in-Polygon Count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nga))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))\n```\n:::\n\n\nThe intersections for the various water points are mapped as shown above\n\n## Saving the Analytical Data Table\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(nga_wp, \"geodata/nga_wp.rds\")\n```\n:::\n\n\nThe extracted data table, nga_wp, has been saved in rds data format as nga_wp.rds with pct_functional and pct_non-functional fields.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}